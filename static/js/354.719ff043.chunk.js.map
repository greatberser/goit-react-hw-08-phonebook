{"version":3,"file":"static/js/354.719ff043.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/AddProfileForm/AddContactForm.module.css?4943","redux/contacts/selectors.js","components/AddProfileForm/AddContactForm.jsx","webpack://react-homework-template/./src/components/Contact/Contact.module.css?03fd","components/Contact/Contact.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"AddContactForm_form__ryw+T\",\"label\":\"AddContactForm_label__5q3tw\",\"submit\":\"AddContactForm_submit__FaGiU\"};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik, Form, Field } from 'formik';\nimport css from './AddContactForm.module.css';\nimport { addContacts } from '../../redux/contacts/operations';\nimport { selectContacts } from '../../redux/contacts/selectors';\n\nexport const AddContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  return (\n    <Formik\n    initialValues={{ name: '', number: '' }}\n    onSubmit={({ name, number }, actions) => {\n      const existContact = contacts.find(\n        (contact) => contact.name.toLowerCase() === name.toLowerCase()\n      );\n\n      if (existContact) {\n        alert(`${name} is already in contacts`);\n      } else {\n        dispatch(addContacts({ name, number }));\n        actions.resetForm();\n      }\n    }}\n  >\n    <Form className={css.form}>\n      <label className={css.label}>\n        <span>Name: </span>\n        <Field\n          type=\"text\"\n          placeholder=\"Name\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          required\n        />\n      </label>\n\n      <label className={css.label}>\n        <span>Number: </span>\n        <Field\n          type=\"tel\"\n          placeholder=\"111-11-11\"\n          name=\"number\"\n          title=\"Number may contain only numbers and dashes. For example 111-11-11\"\n          required\n        />\n      </label>\n      <button className={css.submit} type=\"submit\">\n        Add New Profile\n      </button>\n    </Form>\n  </Formik>\n\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactLine\":\"Contact_contactLine__y4-fk\",\"contactName\":\"Contact_contactName__6ZIQb\",\"contactDelete\":\"Contact_contactDelete__yWOAV\"};","import css from './Contact.module.css'\n\nexport const Contact = ({contact: {name, number}, onClickDelBtn}) => {\n    return (\n        <li className={css.contactLine}>\n            <span className={css.contactName}>{`${name}`}</span>\n            <span className={css.contactNumber}>{`${number}`}</span>\n            <button className={css.contactDelete} type=\"button\" onClick={onClickDelBtn}>\n                Delete\n            </button>\n        </li>\n    )\n}\n\nexport default Contact;","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { Contact } from 'components/Contact/Contact';\nimport { selectFilteredContacts } from '../../redux/contacts/selectors';\nimport css from './ContactList.module.css';\nimport { deleteContacts } from '../../redux/contacts/operations';\n\nexport const ContactList = () => {\n  const filteredContacts = useSelector(selectFilteredContacts);\n  const dispatch = useDispatch();\n  \n  \n\n  return (\n    <ul className={css.list}>\n      {filteredContacts.map(contact => (\n        <Contact\n          key={contact.id}\n          contact={contact}\n          onClickDelBtn={() => dispatch(deleteContacts(contact.id))}\n        />\n      ))}\n    </ul>\n  );\n};","import { useDispatch, useSelector } from 'react-redux';\nimport { updateFilter } from '../../redux/filter/filterSlice';\nimport { selectFilter } from '../../redux/contacts/selectors';\n\nexport const Filter = () => {\n    const dispatch = useDispatch();\n    const filter = useSelector(selectFilter);\n\n    return (\n      <label>\n        <p>Find Contacts by name:</p>\n        <input\n          value={filter}\n          onChange={evt => dispatch(updateFilter(evt.target.value))}\n          name=\"filter\"\n          type=\"text\"\n          placeholder=\"Input name\"\n        />\n      </label>\n    );\n}\n\nexport default Filter;","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { AddContactForm } from 'components/AddProfileForm/AddContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { fetchContacts } from '../../redux/contacts/operations';\nimport { Helmet } from 'react-helmet';\n\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className=\"container\">\n        <Helmet>\n            <title>Your phonebook</title>\n        </Helmet>\n      <h1>Phonebook</h1>\n      <AddContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n"],"names":["selectContacts","state","contacts","items","selectFilter","filter","selectFilteredContacts","createSelector","contact","name","toLowerCase","includes","AddContactForm","dispatch","useDispatch","useSelector","_jsx","Formik","initialValues","number","onSubmit","_ref","actions","find","alert","concat","addContacts","resetForm","children","_jsxs","Form","className","css","Field","type","placeholder","pattern","required","title","Contact","_ref$contact","onClickDelBtn","onClick","ContactList","filteredContacts","map","deleteContacts","id","Filter","value","onChange","evt","updateFilter","target","Contacts","useEffect","fetchContacts","Helmet"],"sourceRoot":""}